<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PlatIAgro – FAQ Desenvolvedores</title><link>https://platiagro.github.io/docs/developers/</link><description>Recent content in FAQ Desenvolvedores on PlatIAgro</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://platiagro.github.io/docs/developers/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Ambiente para Desenvolvimento</title><link>https://platiagro.github.io/docs/developers/dev-env/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://platiagro.github.io/docs/developers/dev-env/</guid><description>
&lt;h3 id="1-expor-o-minio-para-o-ambiente-de-desenvolvimento">1. Expor o MinIO para o ambiente de desenvolvimento&lt;/h3>
&lt;p>No ambiente com a PlatIAgro, execute o seguinte comando para expor o MinIO:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl patch svc nginx --patch &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;{&amp;#34;spec&amp;#34;: { &amp;#34;type&amp;#34;: &amp;#34;NodePort&amp;#34;, &amp;#34;ports&amp;#34;: [ { &amp;#34;nodePort&amp;#34;: 32001, &amp;#34;port&amp;#34;: 9000, &amp;#34;protocol&amp;#34;: &amp;#34;TCP&amp;#34;, &amp;#34;targetPort&amp;#34;: 9000 } ] } }&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>No seu ambiente de desenvolvimento, defina as seguintes variáveis de ambiente:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">MINIO_ENDPOINT&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;hostname-ou-endereco-ip&amp;gt;:32001
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">MINIO_ACCESS_KEY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;access-key&amp;gt;
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">MINIO_SECRET_KEY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;secret-key&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Obs: o access key e secret key podem ser obtidos com os seguintes comandos:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl -n platiagro get secrets minio-secrets --template&lt;span style="color:#ce5c00;font-weight:bold">={{&lt;/span>.data.MINIO_ACCESS_KEY&lt;span style="color:#ce5c00;font-weight:bold">}}&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> base64 -d
kubectl -n platiagro get secrets minio-secrets --template&lt;span style="color:#ce5c00;font-weight:bold">={{&lt;/span>.data.MINIO_SECRET_KEY&lt;span style="color:#ce5c00;font-weight:bold">}}&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> base64 -d
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-expor-o-mysql-para-o-ambiente-de-desenvolvimento">2. Expor o MySQL para o ambiente de desenvolvimento&lt;/h3>
&lt;p>No ambiente com a PlatIAgro, execute o seguinte comando para expor o MySQL:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#000">MYSQL&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl -n platiagro get pod -l &lt;span style="color:#000">app&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>mysql -o &lt;span style="color:#000">jsonpath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">={&lt;/span>.items..metadata.name&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
kubectl -n platiagro port-forward &lt;span style="color:#000">$MYSQL&lt;/span> --address 0.0.0.0 31001:3306
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Você pode combinar com &lt;code>nohup kubectl -n platiagro port-forward $MYSQL --address 0.0.0.0 31001:3306 &amp;amp;&lt;/code> para deixar o processo rodando em segundo plano.&lt;/p>
&lt;p>No seu ambiente de desenvolvimento, defina as seguintes variáveis de ambiente:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">MYSQL_DB_HOST&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;hostname-ou-endereco-ip&amp;gt;:31001
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">MYSQL_DB_USER&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;user&amp;gt;
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">MYSQL_DB_PASSWORD&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;password&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Obs: a senha podem ser visualizada com o seguinte comando:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl -n platiagro get secrets mysql-secrets --template&lt;span style="color:#ce5c00;font-weight:bold">={{&lt;/span>.data.MYSQL_ROOT_PASSWORD&lt;span style="color:#ce5c00;font-weight:bold">}}&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> base64 -d
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>ATENÇÃO 1: Expor com NodePort não funciona para o MySQL da PlatIAgro!&lt;/strong>&lt;/p>
&lt;p>&lt;strong>ATENÇÃO 2: O processo &lt;code>kubectl -n platiagro port-forward ...&lt;/code> geralmente finaliza após alguns minutos/horas. É necessário rodar o comando novamente para que o MySQL fique acessível.&lt;/strong>&lt;/p>
&lt;h3 id="3-autenticar-se-no-kubeflow-pipelines">3. Autenticar-se no Kubeflow Pipelines&lt;/h3>
&lt;p>O Kubeflow pipelines precisa do header &lt;code>kubeflow-userid: anonymous@kubeflow.org&lt;/code> para executar operações. Este header é incluído automaticamente para serviços dentro do cluster. Para incluir o header em requisições externas (ex: num ambiente de desenvolvimento, localhost) crie o seguinte &lt;a href="https://istio.io/latest/docs/reference/config/networking/envoy-filter/">envoy-filter&lt;/a> no cluster:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl apply -f - &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;span style="color:#4e9a06">apiVersion: networking.istio.io/v1alpha3
&lt;/span>&lt;span style="color:#4e9a06">kind: EnvoyFilter
&lt;/span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;span style="color:#4e9a06"> name: add-kubeflow-userid-filter
&lt;/span>&lt;span style="color:#4e9a06"> namespace: istio-system
&lt;/span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;span style="color:#4e9a06"> workloadSelector:
&lt;/span>&lt;span style="color:#4e9a06"> labels:
&lt;/span>&lt;span style="color:#4e9a06"> istio: ingressgateway
&lt;/span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;span style="color:#4e9a06"> configPatches:
&lt;/span>&lt;span style="color:#4e9a06"> - applyTo: VIRTUAL_HOST
&lt;/span>&lt;span style="color:#4e9a06"> match:
&lt;/span>&lt;span style="color:#4e9a06"> context: SIDECAR_OUTBOUND
&lt;/span>&lt;span style="color:#4e9a06"> routeConfiguration:
&lt;/span>&lt;span style="color:#4e9a06"> vhost:
&lt;/span>&lt;span style="color:#4e9a06"> name: ml-pipeline.kubeflow.svc.cluster.local:8888
&lt;/span>&lt;span style="color:#4e9a06"> route:
&lt;/span>&lt;span style="color:#4e9a06"> name: default
&lt;/span>&lt;span style="color:#4e9a06"> patch:
&lt;/span>&lt;span style="color:#4e9a06"> operation: MERGE
&lt;/span>&lt;span style="color:#4e9a06"> value:
&lt;/span>&lt;span style="color:#4e9a06"> request_headers_to_add:
&lt;/span>&lt;span style="color:#4e9a06"> - append: true
&lt;/span>&lt;span style="color:#4e9a06"> header:
&lt;/span>&lt;span style="color:#4e9a06"> key: kubeflow-userid
&lt;/span>&lt;span style="color:#4e9a06"> value: anonymous@kubeflow.org
&lt;/span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="4-desabilitar-autenticação-validação-de-cookie-em-ambiente-com-login">4. Desabilitar Autenticação (validação de cookie) em ambiente com Login&lt;/h3>
&lt;p>&lt;strong>Por que desabilitar a autenticação?&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>para que devs do Frontend acessem o backend da aplicação sem o cookie de login.&lt;/li>
&lt;li>para que devs do Backend acessem Kubeflow Pipelines a partir de fora do cluster&lt;/li>
&lt;li>para facilitar testes/integração de fluxos implantados&lt;/li>
&lt;/ul>
&lt;p>Siga as instruções &lt;a href="https://platiagro.github.io/docs/getting-started/skip-auth-url/">deste link&lt;/a> para desabilitar o login.&lt;/p>
&lt;h3 id="5-aumentar-os-limites-de-eviction-do-kubernetes-para-ambientes-com-pouco-espaço-em-disco">5. Aumentar os limites de &lt;em>eviction&lt;/em> do Kubernetes para ambientes com pouco espaço em disco&lt;/h3>
&lt;p>No ambiente com a PlatIAgro, execute o seguinte comando:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;KUBELET_EXTRA_ARGS=--eviction-hard=nodefs.available&amp;lt;1%,nodefs.inodesFree&amp;lt;1%,imagefs.available&amp;lt;1% --image-gc-high-threshold=99&amp;#39;&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> sudo tee /etc/default/kubelet
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="6-trocar-o-https-por-http-no-gateway-de-entrada">6. Trocar o HTTPS por HTTP no gateway de entrada&lt;/h3>
&lt;p>Por padrão a PlatIAgro é instalada com um certificado (HTTPS) auto-assinado e acessos HTTP redirecionam para HTTPS.&lt;/p>
&lt;p>Para desabilitar o HTTPS, edite o gateway &lt;code>kubeflow-gateway&lt;/code> no namespace &lt;code>kubeflow&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl apply -f - &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;span style="color:#4e9a06">apiVersion: networking.istio.io/v1beta1
&lt;/span>&lt;span style="color:#4e9a06">kind: Gateway
&lt;/span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;span style="color:#4e9a06"> name: kubeflow-gateway
&lt;/span>&lt;span style="color:#4e9a06"> namespace: kubeflow
&lt;/span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;span style="color:#4e9a06"> selector:
&lt;/span>&lt;span style="color:#4e9a06"> istio: ingressgateway
&lt;/span>&lt;span style="color:#4e9a06"> servers:
&lt;/span>&lt;span style="color:#4e9a06"> - hosts:
&lt;/span>&lt;span style="color:#4e9a06"> - &amp;#39;*&amp;#39;
&lt;/span>&lt;span style="color:#4e9a06"> port:
&lt;/span>&lt;span style="color:#4e9a06"> name: http
&lt;/span>&lt;span style="color:#4e9a06"> number: 80
&lt;/span>&lt;span style="color:#4e9a06"> protocol: HTTP
&lt;/span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Após salvar as alterações, a plataforma estará acessível &lt;strong>apenas por http.&lt;/strong> Acessos com HTTPS retornarão erro.&lt;/p>
&lt;p>&lt;img src="https://platiagro.github.io/images/platiagro-http.png" alt="Screenshot com exibição de acessos à plataforma com HTTP e HTTPS, após realizar as alterações.">&lt;/p>
&lt;h3 id="7-habilitar-cors-nos-backends-da-platiagro">7. Habilitar CORS nos backends da PlatIAgro&lt;/h3>
&lt;p>Para que um desenvolvedor Frontend use o backend da aplicação, é necessário habilitar o &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS">CORS&lt;/a>.&lt;/p>
&lt;p>Edite os deployments &lt;code>projects&lt;/code> e &lt;code>datasets&lt;/code> no namespace &lt;code>platiagro&lt;/code> e inclua a variável de ambiente &lt;code>ENABLE_CORS=1&lt;/code> em ambos:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl -n platiagro &lt;span style="color:#204a87">set&lt;/span> env deployment/projects &lt;span style="color:#000">ENABLE_CORS&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
kubectl -n platiagro &lt;span style="color:#204a87">set&lt;/span> env deployment/datasets &lt;span style="color:#000">ENABLE_CORS&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="8-visualizar-logs-do-backend-da-platiagro">8. Visualizar logs do backend da PlatIAgro&lt;/h3>
&lt;p>Para visualizar logs do &lt;strong>Istio Ingress Gateway&lt;/strong>, execute o seguinte comando:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl -n istio-system logs deployment/istio-ingressgateway --tail &lt;span style="color:#0000cf;font-weight:bold">100&lt;/span> -f
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Para visualizar logs do backend &lt;a href="https://github.com/platiagro/projects">&lt;code>projects&lt;/code>&lt;/a>, execute o seguinte comando:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl -n platiagro logs deployment/projects --tail &lt;span style="color:#0000cf;font-weight:bold">100&lt;/span> -f
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Para visualizar logs do backend &lt;a href="https://github.com/platiagro/datasets">&lt;code>datasets&lt;/code>&lt;/a>, execute o seguinte comando:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl -n platiagro logs deployment/datasets --tail &lt;span style="color:#0000cf;font-weight:bold">100&lt;/span> -f
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Para visualizar logs do &lt;strong>Kubeflow Pipelines&lt;/strong>, execute o seguinte comando:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl -n kubeflow logs deployment/ml-pipeline --tail &lt;span style="color:#0000cf;font-weight:bold">100&lt;/span> -f
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="9-visualizar-pipelines-e-logs-do-kubeflow-no-dashboard-do-argo-workflows">9. Visualizar Pipelines e Logs do Kubeflow no Dashboard do Argo Workflows&lt;/h3>
&lt;p>É possível visualizar os logs e os status dos workflows no &lt;a href="https://argoproj.github.io/argo-rollouts/dashboard/">dashboard&lt;/a>.&lt;/p>
&lt;p>Esta interface é útil para DEBUG de problemas nos experimentos, deployments e tarefas.&lt;/p>
&lt;p>&lt;img src="https://platiagro.github.io/images/argo-dashboard.png" alt="Screenshot com exibição do dashboard do argo workflows.">&lt;/p>
&lt;p>Execute o seguinte comando para adicionar o dashboard no ambiente da PlatIAgro:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl apply -f - &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;span style="color:#4e9a06">apiVersion: networking.istio.io/v1alpha3
&lt;/span>&lt;span style="color:#4e9a06">kind: VirtualService
&lt;/span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;span style="color:#4e9a06"> labels:
&lt;/span>&lt;span style="color:#4e9a06"> app.kubernetes.io/component: argo
&lt;/span>&lt;span style="color:#4e9a06"> app.kubernetes.io/name: argo
&lt;/span>&lt;span style="color:#4e9a06"> kustomize.component: argo
&lt;/span>&lt;span style="color:#4e9a06"> name: argo-ui
&lt;/span>&lt;span style="color:#4e9a06"> namespace: kubeflow
&lt;/span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;span style="color:#4e9a06"> gateways:
&lt;/span>&lt;span style="color:#4e9a06"> - kubeflow-gateway
&lt;/span>&lt;span style="color:#4e9a06"> hosts:
&lt;/span>&lt;span style="color:#4e9a06"> - &amp;#39;*&amp;#39;
&lt;/span>&lt;span style="color:#4e9a06"> http:
&lt;/span>&lt;span style="color:#4e9a06"> - match:
&lt;/span>&lt;span style="color:#4e9a06"> - uri:
&lt;/span>&lt;span style="color:#4e9a06"> prefix: /argo/
&lt;/span>&lt;span style="color:#4e9a06"> rewrite:
&lt;/span>&lt;span style="color:#4e9a06"> uri: /
&lt;/span>&lt;span style="color:#4e9a06"> route:
&lt;/span>&lt;span style="color:#4e9a06"> - destination:
&lt;/span>&lt;span style="color:#4e9a06"> host: argo-ui.kubeflow.svc.cluster.local
&lt;/span>&lt;span style="color:#4e9a06"> port:
&lt;/span>&lt;span style="color:#4e9a06"> number: 80
&lt;/span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;span style="color:#4e9a06">apiVersion: apps/v1
&lt;/span>&lt;span style="color:#4e9a06">kind: Deployment
&lt;/span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;span style="color:#4e9a06"> labels:
&lt;/span>&lt;span style="color:#4e9a06"> app: argo-ui
&lt;/span>&lt;span style="color:#4e9a06"> app.kubernetes.io/component: argo
&lt;/span>&lt;span style="color:#4e9a06"> app.kubernetes.io/name: argo
&lt;/span>&lt;span style="color:#4e9a06"> kustomize.component: argo
&lt;/span>&lt;span style="color:#4e9a06"> name: argo-ui
&lt;/span>&lt;span style="color:#4e9a06"> namespace: kubeflow
&lt;/span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;span style="color:#4e9a06"> progressDeadlineSeconds: 600
&lt;/span>&lt;span style="color:#4e9a06"> replicas: 1
&lt;/span>&lt;span style="color:#4e9a06"> revisionHistoryLimit: 10
&lt;/span>&lt;span style="color:#4e9a06"> selector:
&lt;/span>&lt;span style="color:#4e9a06"> matchLabels:
&lt;/span>&lt;span style="color:#4e9a06"> app: argo-ui
&lt;/span>&lt;span style="color:#4e9a06"> app.kubernetes.io/component: argo
&lt;/span>&lt;span style="color:#4e9a06"> app.kubernetes.io/name: argo
&lt;/span>&lt;span style="color:#4e9a06"> kustomize.component: argo
&lt;/span>&lt;span style="color:#4e9a06"> strategy:
&lt;/span>&lt;span style="color:#4e9a06"> rollingUpdate:
&lt;/span>&lt;span style="color:#4e9a06"> maxSurge: 25%
&lt;/span>&lt;span style="color:#4e9a06"> maxUnavailable: 25%
&lt;/span>&lt;span style="color:#4e9a06"> type: RollingUpdate
&lt;/span>&lt;span style="color:#4e9a06"> template:
&lt;/span>&lt;span style="color:#4e9a06"> metadata:
&lt;/span>&lt;span style="color:#4e9a06"> annotations:
&lt;/span>&lt;span style="color:#4e9a06"> sidecar.istio.io/inject: &amp;#34;false&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06"> creationTimestamp: null
&lt;/span>&lt;span style="color:#4e9a06"> labels:
&lt;/span>&lt;span style="color:#4e9a06"> app: argo-ui
&lt;/span>&lt;span style="color:#4e9a06"> app.kubernetes.io/component: argo
&lt;/span>&lt;span style="color:#4e9a06"> app.kubernetes.io/name: argo
&lt;/span>&lt;span style="color:#4e9a06"> kustomize.component: argo
&lt;/span>&lt;span style="color:#4e9a06"> spec:
&lt;/span>&lt;span style="color:#4e9a06"> containers:
&lt;/span>&lt;span style="color:#4e9a06"> - env:
&lt;/span>&lt;span style="color:#4e9a06"> - name: ARGO_NAMESPACE
&lt;/span>&lt;span style="color:#4e9a06"> valueFrom:
&lt;/span>&lt;span style="color:#4e9a06"> fieldRef:
&lt;/span>&lt;span style="color:#4e9a06"> apiVersion: v1
&lt;/span>&lt;span style="color:#4e9a06"> fieldPath: metadata.namespace
&lt;/span>&lt;span style="color:#4e9a06"> - name: IN_CLUSTER
&lt;/span>&lt;span style="color:#4e9a06"> value: &amp;#34;true&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06"> - name: ENABLE_WEB_CONSOLE
&lt;/span>&lt;span style="color:#4e9a06"> value: &amp;#34;false&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06"> - name: BASE_HREF
&lt;/span>&lt;span style="color:#4e9a06"> value: /argo/
&lt;/span>&lt;span style="color:#4e9a06"> image: argoproj/argoui:v2.3.0
&lt;/span>&lt;span style="color:#4e9a06"> imagePullPolicy: IfNotPresent
&lt;/span>&lt;span style="color:#4e9a06"> name: argo-ui
&lt;/span>&lt;span style="color:#4e9a06"> readinessProbe:
&lt;/span>&lt;span style="color:#4e9a06"> failureThreshold: 3
&lt;/span>&lt;span style="color:#4e9a06"> httpGet:
&lt;/span>&lt;span style="color:#4e9a06"> path: /
&lt;/span>&lt;span style="color:#4e9a06"> port: 8001
&lt;/span>&lt;span style="color:#4e9a06"> scheme: HTTP
&lt;/span>&lt;span style="color:#4e9a06"> periodSeconds: 10
&lt;/span>&lt;span style="color:#4e9a06"> successThreshold: 1
&lt;/span>&lt;span style="color:#4e9a06"> timeoutSeconds: 1
&lt;/span>&lt;span style="color:#4e9a06"> resources: {}
&lt;/span>&lt;span style="color:#4e9a06"> terminationMessagePath: /dev/termination-log
&lt;/span>&lt;span style="color:#4e9a06"> terminationMessagePolicy: File
&lt;/span>&lt;span style="color:#4e9a06"> dnsPolicy: ClusterFirst
&lt;/span>&lt;span style="color:#4e9a06"> restartPolicy: Always
&lt;/span>&lt;span style="color:#4e9a06"> schedulerName: default-scheduler
&lt;/span>&lt;span style="color:#4e9a06"> securityContext: {}
&lt;/span>&lt;span style="color:#4e9a06"> serviceAccount: argo
&lt;/span>&lt;span style="color:#4e9a06"> serviceAccountName: argo
&lt;/span>&lt;span style="color:#4e9a06"> terminationGracePeriodSeconds: 30
&lt;/span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;span style="color:#4e9a06">apiVersion: v1
&lt;/span>&lt;span style="color:#4e9a06">kind: Service
&lt;/span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;span style="color:#4e9a06"> labels:
&lt;/span>&lt;span style="color:#4e9a06"> app: argo-ui
&lt;/span>&lt;span style="color:#4e9a06"> app.kubernetes.io/component: argo
&lt;/span>&lt;span style="color:#4e9a06"> app.kubernetes.io/name: argo
&lt;/span>&lt;span style="color:#4e9a06"> kustomize.component: argo
&lt;/span>&lt;span style="color:#4e9a06"> name: argo-ui
&lt;/span>&lt;span style="color:#4e9a06"> namespace: kubeflow
&lt;/span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;span style="color:#4e9a06"> externalTrafficPolicy: Cluster
&lt;/span>&lt;span style="color:#4e9a06"> ports:
&lt;/span>&lt;span style="color:#4e9a06"> - nodePort: 31788
&lt;/span>&lt;span style="color:#4e9a06"> port: 80
&lt;/span>&lt;span style="color:#4e9a06"> protocol: TCP
&lt;/span>&lt;span style="color:#4e9a06"> targetPort: 8001
&lt;/span>&lt;span style="color:#4e9a06"> selector:
&lt;/span>&lt;span style="color:#4e9a06"> app: argo-ui
&lt;/span>&lt;span style="color:#4e9a06"> app.kubernetes.io/component: argo
&lt;/span>&lt;span style="color:#4e9a06"> app.kubernetes.io/name: argo
&lt;/span>&lt;span style="color:#4e9a06"> kustomize.component: argo
&lt;/span>&lt;span style="color:#4e9a06"> sessionAffinity: None
&lt;/span>&lt;span style="color:#4e9a06"> type: NodePort
&lt;/span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;span style="color:#4e9a06">apiVersion: rbac.authorization.k8s.io/v1
&lt;/span>&lt;span style="color:#4e9a06">kind: ClusterRole
&lt;/span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;span style="color:#4e9a06"> labels:
&lt;/span>&lt;span style="color:#4e9a06"> application-crd-id: kubeflow-pipelines
&lt;/span>&lt;span style="color:#4e9a06"> name: argo-cluster-role
&lt;/span>&lt;span style="color:#4e9a06">rules:
&lt;/span>&lt;span style="color:#4e9a06">- apiGroups:
&lt;/span>&lt;span style="color:#4e9a06"> - &amp;#34;&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06"> resources:
&lt;/span>&lt;span style="color:#4e9a06"> - pods
&lt;/span>&lt;span style="color:#4e9a06"> - pods/exec
&lt;/span>&lt;span style="color:#4e9a06"> - pods/log
&lt;/span>&lt;span style="color:#4e9a06"> verbs:
&lt;/span>&lt;span style="color:#4e9a06"> - create
&lt;/span>&lt;span style="color:#4e9a06"> - get
&lt;/span>&lt;span style="color:#4e9a06"> - list
&lt;/span>&lt;span style="color:#4e9a06"> - watch
&lt;/span>&lt;span style="color:#4e9a06"> - update
&lt;/span>&lt;span style="color:#4e9a06"> - patch
&lt;/span>&lt;span style="color:#4e9a06"> - delete
&lt;/span>&lt;span style="color:#4e9a06">- apiGroups:
&lt;/span>&lt;span style="color:#4e9a06"> - &amp;#34;&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06"> resources:
&lt;/span>&lt;span style="color:#4e9a06"> - configmaps
&lt;/span>&lt;span style="color:#4e9a06"> verbs:
&lt;/span>&lt;span style="color:#4e9a06"> - get
&lt;/span>&lt;span style="color:#4e9a06"> - watch
&lt;/span>&lt;span style="color:#4e9a06"> - list
&lt;/span>&lt;span style="color:#4e9a06">- apiGroups:
&lt;/span>&lt;span style="color:#4e9a06"> - &amp;#34;&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06"> resources:
&lt;/span>&lt;span style="color:#4e9a06"> - persistentvolumeclaims
&lt;/span>&lt;span style="color:#4e9a06"> verbs:
&lt;/span>&lt;span style="color:#4e9a06"> - create
&lt;/span>&lt;span style="color:#4e9a06"> - delete
&lt;/span>&lt;span style="color:#4e9a06"> - get
&lt;/span>&lt;span style="color:#4e9a06">- apiGroups:
&lt;/span>&lt;span style="color:#4e9a06"> - argoproj.io
&lt;/span>&lt;span style="color:#4e9a06"> resources:
&lt;/span>&lt;span style="color:#4e9a06"> - workflows
&lt;/span>&lt;span style="color:#4e9a06"> - workflows/finalizers
&lt;/span>&lt;span style="color:#4e9a06"> verbs:
&lt;/span>&lt;span style="color:#4e9a06"> - get
&lt;/span>&lt;span style="color:#4e9a06"> - list
&lt;/span>&lt;span style="color:#4e9a06"> - watch
&lt;/span>&lt;span style="color:#4e9a06"> - update
&lt;/span>&lt;span style="color:#4e9a06"> - patch
&lt;/span>&lt;span style="color:#4e9a06"> - delete
&lt;/span>&lt;span style="color:#4e9a06"> - create
&lt;/span>&lt;span style="color:#4e9a06">- apiGroups:
&lt;/span>&lt;span style="color:#4e9a06"> - argoproj.io
&lt;/span>&lt;span style="color:#4e9a06"> resources:
&lt;/span>&lt;span style="color:#4e9a06"> - workflowtemplates
&lt;/span>&lt;span style="color:#4e9a06"> - workflowtemplates/finalizers
&lt;/span>&lt;span style="color:#4e9a06"> - clusterworkflowtemplates
&lt;/span>&lt;span style="color:#4e9a06"> - clusterworkflowtemplates/finalizers
&lt;/span>&lt;span style="color:#4e9a06"> verbs:
&lt;/span>&lt;span style="color:#4e9a06"> - get
&lt;/span>&lt;span style="color:#4e9a06"> - list
&lt;/span>&lt;span style="color:#4e9a06"> - watch
&lt;/span>&lt;span style="color:#4e9a06">- apiGroups:
&lt;/span>&lt;span style="color:#4e9a06"> - &amp;#34;&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06"> resources:
&lt;/span>&lt;span style="color:#4e9a06"> - serviceaccounts
&lt;/span>&lt;span style="color:#4e9a06"> verbs:
&lt;/span>&lt;span style="color:#4e9a06"> - get
&lt;/span>&lt;span style="color:#4e9a06"> - list
&lt;/span>&lt;span style="color:#4e9a06">- apiGroups:
&lt;/span>&lt;span style="color:#4e9a06"> - argoproj.io
&lt;/span>&lt;span style="color:#4e9a06"> resources:
&lt;/span>&lt;span style="color:#4e9a06"> - cronworkflows
&lt;/span>&lt;span style="color:#4e9a06"> - cronworkflows/finalizers
&lt;/span>&lt;span style="color:#4e9a06"> verbs:
&lt;/span>&lt;span style="color:#4e9a06"> - get
&lt;/span>&lt;span style="color:#4e9a06"> - list
&lt;/span>&lt;span style="color:#4e9a06"> - watch
&lt;/span>&lt;span style="color:#4e9a06"> - update
&lt;/span>&lt;span style="color:#4e9a06"> - patch
&lt;/span>&lt;span style="color:#4e9a06"> - delete
&lt;/span>&lt;span style="color:#4e9a06">- apiGroups:
&lt;/span>&lt;span style="color:#4e9a06"> - &amp;#34;&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06"> resources:
&lt;/span>&lt;span style="color:#4e9a06"> - events
&lt;/span>&lt;span style="color:#4e9a06"> verbs:
&lt;/span>&lt;span style="color:#4e9a06"> - create
&lt;/span>&lt;span style="color:#4e9a06"> - patch
&lt;/span>&lt;span style="color:#4e9a06">- apiGroups:
&lt;/span>&lt;span style="color:#4e9a06"> - policy
&lt;/span>&lt;span style="color:#4e9a06"> resources:
&lt;/span>&lt;span style="color:#4e9a06"> - poddisruptionbudgets
&lt;/span>&lt;span style="color:#4e9a06"> verbs:
&lt;/span>&lt;span style="color:#4e9a06"> - create
&lt;/span>&lt;span style="color:#4e9a06"> - get
&lt;/span>&lt;span style="color:#4e9a06"> - delete
&lt;/span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Acesse o dashboard do Argo Workflows no seguinte endereço: http://&lt;hostname-ou-endedeco-ip-da-platiagro>/argo/&lt;/p></description></item></channel></rss>