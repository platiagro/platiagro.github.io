<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PlatIAgro – Primeiros Passos</title><link>https://platiagro.github.io/docs/getting-started/</link><description>Recent content in Primeiros Passos on PlatIAgro</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://platiagro.github.io/docs/getting-started/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Ciclo de Desenvolvimento de Projetos de IA</title><link>https://platiagro.github.io/docs/getting-started/workflow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://platiagro.github.io/docs/getting-started/workflow/</guid><description>
&lt;p>As tarefas nativas disponíveis na versão de teste controlado da PlatIAgro foram desenhadas para atender ao ciclo de um projeto de inteligência artificial, mais especificamente para o desenvolvimento de modelos de predição estatística.&lt;/p>
&lt;p>&lt;img src="https://platiagro.github.io/images/ai-flow.png" alt="Ciclo de desenvolvimento de um projeto de inteligência artificial">&lt;/p>
&lt;h3 id="preparação-dos-dados">Preparação dos dados&lt;/h3>
&lt;p>O desenvolvimento de um modelo de IA começa pela busca dos dados de entrada, ou seja, as informações que serão utilizadas como matéria-prima deste processo. Com este objetivo, uma das tarefas nativas da PlatIAgro localiza e importa arquivos de dados do tipo texto. Outras tarefas podem ser desenvolvidas para esse fim, com outras particularidades.&lt;/p>
&lt;h3 id="pré-processamento">Pré-processamento&lt;/h3>
&lt;p>Esta etapa é importante pois tende a melhorar a acurácia dos modelos. Existem diversas formas de realizar a manipulação de dados para serem consumidos por modelos de IA. Para auxiliar na realização desta tarefa de forma automática, a PlatIAgro possui algumas tarefas nativas, como a criação e seleção de novos atributos de forma inteligente e automática.&lt;/p>
&lt;h3 id="modelos-ou-algoritmosbravaliação-validação-e-comparação">Modelos ou algoritmos&lt;br>Avaliação, validação e comparação&lt;/h3>
&lt;p>Para escolher um método específico é necessário entender o tipo do problema, quais informações extras devem ser utilizadas (hiperparâmetros) e qual será o recorte da massa de dados históricos para uma boa acurácia. A PlatIAgro fornece alguns métodos como tarefas nativas: floresta aleatória, regressões e AutoML. O AutoML utiliza um método de otimização que busca pela melhor combinação de métodos e hiperparâmetros de forma automática.&lt;/p>
&lt;h3 id="implantação">Implantação&lt;/h3>
&lt;p>A implantação também é facilitada com a PlatIAgro: utilizando alguns exemplos e instruções didáticas, o desenvolvedor de modelos é direcionado a preparar o código de forma que a implantação seja quase automática, exigindo menos conhecimento técnico.&lt;/p>
&lt;h3 id="predições">Predições&lt;/h3>
&lt;p>Com o modelo implantado, conforme novos dados de entrada chegam à PlatIAgro por uma aplicação, ela os direciona para o fluxo de tarefas associado ao projeto e realiza suas ações. Ao final, os valores estimados são devolvidos à aplicação.&lt;/p>
&lt;h3 id="gerenciamento-e-monitoramento">Gerenciamento e monitoramento&lt;/h3>
&lt;p>Para avaliar em tempo real os modelos de IA já implantados (em utilização), a PlatIAgro fornece uma tarefa nativa de monitoramento.&lt;/p></description></item><item><title>Docs: Instalação da PlatIAgro</title><link>https://platiagro.github.io/docs/getting-started/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://platiagro.github.io/docs/getting-started/install/</guid><description>
&lt;h3 id="instalação-em-um-cluster-kubernetes">Instalação em um cluster Kubernetes&lt;/h3>
&lt;p>Certifique-se de ter os seguintes pré-requisitos antes de instalar a PlatIAgro:&lt;/p>
&lt;ul>
&lt;li>&lt;code>Kubernetes&lt;/code> (testado com a versão &lt;code>1.18&lt;/code>) com um &lt;a href="https://kubernetes.io/docs/concepts/storage/storage-classes/">StorageClass&lt;/a>&lt;/li>
&lt;li>&lt;code>kustomize&lt;/code> (testado com a versão &lt;code>3.2.0&lt;/code>) (&lt;a href="https://github.com/kubernetes-sigs/kustomize/releases/tag/v3.2.0">download link&lt;/a>)
&lt;ul>
&lt;li>PlatIAgro é construída usando o &lt;a href="https://www.kubeflow.org">Kubeflow&lt;/a>, e o Kubeflow 1.3.0 não é compatível com a versão mais recente do kustomize 4.x.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>kubectl&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Há 4 modos de instalação:&lt;/p>
&lt;pre>&lt;code>platiagro sem autenticação e pronta para CPU.
platiagro-gpu sem autenticação e pronta para GPU.
platiagro-auth com autenticação e pronta para CPU.
platiagro-gpu-auth com autenticação e pronta para GPU.
&lt;/code>&lt;/pre>&lt;p>Ajuste a variável &lt;code>INSTALL_DIR=platiagro&lt;/code>, e então rode os seguintes comandos:&lt;/p>
&lt;pre>&lt;code>export INSTALL_DIR=platiagro
git clone --single-branch --branch v0.2.0-kubeflow-v1.3-branch https://github.com/platiagro/manifests.git
cd manifests
while ! kustomize build $INSTALL_DIR | kubectl apply -f -; do echo &amp;quot;Retrying to apply resources&amp;quot;; sleep 10; done
&lt;/code>&lt;/pre>&lt;p>Então visite https://[LOAD-BALANCER-HOST]/&lt;/p>
&lt;h3 id="instalação-no-google-kubernetes-engine-gke">Instalação no Google Kubernetes Engine (GKE)&lt;/h3>
&lt;p>Visite &lt;a href="https://platiagro-gcp.herokuapp.com/">https://platiagro-gcp.herokuapp.com/&lt;/a> e siga as instruções.&lt;/p></description></item><item><title>Docs: Interface Web</title><link>https://platiagro.github.io/docs/getting-started/first-access/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://platiagro.github.io/docs/getting-started/first-access/</guid><description>
&lt;p>A seguir estão algumas capturas de tela de interfaces da PlatIAgro.&lt;/p>
&lt;h3 id="lista-de-projetos">Lista de projetos&lt;/h3>
&lt;p>&lt;img src="https://platiagro.github.io/images/list-projects.png" alt="Lista de projetos.">&lt;/p>
&lt;h3 id="fluxo-de-experimentos">Fluxo de experimentos&lt;/h3>
&lt;p>&lt;img src="https://platiagro.github.io/images/experiments.png" alt="Fluxo de experimentos.">&lt;/p>
&lt;h3 id="comparação-de-resultados">Comparação de resultados&lt;/h3>
&lt;p>&lt;img src="https://platiagro.github.io/images/comparison.png" alt="Comparação de resultados.">&lt;/p>
&lt;h3 id="fluxos-implantados">Fluxos implantados&lt;/h3>
&lt;p>&lt;img src="https://platiagro.github.io/images/deployments.png" alt="Fluxo implantados.">&lt;/p>
&lt;h3 id="lista-de-tarefas">Lista de tarefas&lt;/h3>
&lt;p>&lt;img src="https://platiagro.github.io/images/list-tasks.png" alt="Lista de tarefas.">&lt;/p>
&lt;h3 id="jupyterlab">JupyterLab&lt;/h3>
&lt;p>&lt;img src="https://platiagro.github.io/images/jupyterlab.png" alt="Código fonte da tarefa no JupyterLab.">&lt;/p></description></item><item><title>Docs: Criação de senha</title><link>https://platiagro.github.io/docs/getting-started/password-creation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://platiagro.github.io/docs/getting-started/password-creation/</guid><description>
&lt;h3 id="criação-de-login-e-senha-na-platiagro">Criação de login e senha na platiagro&lt;/h3>
&lt;p>É altamente &lt;strong>NÃO recomendado&lt;/strong> a utilização da senha predefinida do usuário padrão da platiagro em ambientes que precisam de segurança. Dito isto, segue abaixo as recomendações de criação de senha:&lt;/p>
&lt;ol>
&lt;li>considere o usuário padrão com o login &lt;code>platiagro&lt;/code>, basta escolher uma senha para esse usuário e em seguida transformá-la em uma hash utilizando a lib &lt;code>bcrypt&lt;/code> do python, segue os passos para realizar isto:&lt;/li>
&lt;/ol>
&lt;p>Comando de instalação de bibliotecas necessárias(bcrypt e passlib):&lt;/p>
&lt;pre>&lt;code>pip3 install passlib[bcrypt]
pip3 install bcrypt
obs: Para instalações de bibliotecas python 3 é necessário ter o gerenciador de pacotes pip3 instalado
&lt;/code>&lt;/pre>&lt;p>Script de geração da hash:&lt;/p>
&lt;pre>&lt;code>python3 -c 'from passlib.hash import bcrypt; import getpass; print(bcrypt.using(rounds=12, ident=&amp;quot;2y&amp;quot;).hash(getpass.getpass()))'
obs: Será solicitada a senha que deseja ser transformada em hash. O comando acima foi executado em terminais linux com interpretador de python(&amp;gt;=3.6).
&lt;/code>&lt;/pre>&lt;p>segue um exemplo de utilização do bcrypt para geração de hash: &lt;img src="https://platiagro.github.io/images/hash_generation.png" alt="Hash generation file">&lt;/p>
&lt;ol start="2">
&lt;li>A hash gerada no passo anterior precisa ser inserida em &lt;code>dex/base/config-map.yaml&lt;/code>. É possível usar um comando do kubectl para editar o configmap, segue o comando:&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>kubectl -n auth edit configmap dex
&lt;/code>&lt;/pre>&lt;p>segue um exemplo de trecho do configmap: &lt;img src="https://platiagro.github.io/images/configmap.png" alt="Config map file">&lt;/p>
&lt;ol start="3">
&lt;li>Uma vez com o configmap aberto, basta inserir o email/hash no seguinte trecho do arquivo:&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>...
staticPasswords:
- email: platiagro
hash: &amp;lt;enter the generated hash here&amp;gt;
&lt;/code>&lt;/pre>&lt;p>Exemplo de mais de um email/hash configurado: &lt;img src="https://platiagro.github.io/images/config-email-hash.png" alt="Config email hash">&lt;/p>
&lt;ol start="4">
&lt;li>Reinicie o serviço para que as novas senhas comecem a ser utilizadas, utilizando o seguinte comando:&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>kubectl -n auth delete pod -l app=dex
&lt;/code>&lt;/pre>&lt;h3 id="links-úteis">Links úteis&lt;/h3>
&lt;ul>
&lt;li>Documentação do dex: &lt;a href="https://dexidp.io/docs/using-dex/">https://dexidp.io/docs/using-dex/&lt;/a>&lt;/li>
&lt;li>Instruções sobre instalações de pacotes python: &lt;a href="https://packaging.python.org/tutorials/installing-packages/">https://packaging.python.org/tutorials/installing-packages/&lt;/a>&lt;/li>
&lt;li>Repositório do bcrypt: &lt;a href="https://github.com/pyca/bcrypt/">https://github.com/pyca/bcrypt/&lt;/a>&lt;/li>
&lt;li>Tutorial sobre encriptação de senhas com bcrypt: &lt;a href="https://medium.com/py-bcrypt/encriptando-senhas-em-python-com-bcrypt-25e46b5c8166">https://medium.com/py-bcrypt/encriptando-senhas-em-python-com-bcrypt-25e46b5c8166&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docs: Autenticação PlatIAgro</title><link>https://platiagro.github.io/docs/getting-started/authentication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://platiagro.github.io/docs/getting-started/authentication/</guid><description>
&lt;p>O método para obter o token authservice_session para enviar solicitações de predição autenticadas ao PlatIAgro.&lt;/p>
&lt;h3 id="usando-python">Usando Python&lt;/h3>
&lt;p>Criar um arquivo, por exemplo, &lt;code>authpla.py&lt;/code>, e colocar o conteúdo abaixo:&lt;/p>
&lt;pre>&lt;code>import requests
import os
requests.packages.urllib3.disable_warnings(
requests.packages.urllib3.exceptions.InsecureRequestWarning)
USERNAME = &amp;quot;platiagro&amp;quot;
PASSWORD = &amp;quot;platiagro1234&amp;quot;
HOST = os.popen(&amp;quot;kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.clusterIP}'&amp;quot;).read()
NAMESPACE=&amp;quot;istio-system&amp;quot;
session = requests.Session()
response = session.get(f&amp;quot;https://{HOST}&amp;quot;, verify=False)
headers = {
&amp;quot;Content-Type&amp;quot;: &amp;quot;application/x-www-form-urlencoded&amp;quot;,
}
data = {&amp;quot;login&amp;quot;: USERNAME, &amp;quot;password&amp;quot;: PASSWORD}
session.post(response.url, headers=headers, data=data)
print(session.cookies.get_dict())
session_cookie = session.cookies.get_dict()[&amp;quot;authservice_session&amp;quot;]
print(session_cookie)
&lt;/code>&lt;/pre>&lt;p>Executar o script &lt;code>python3 authpla.py&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>Retorno esperado:&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>{'authservice_session':'MTYzMDUyNjMzM3xOd3dBTkZaVVVsazNWRFEwUlRSWFRGUkZOak5FU1RWV1MxVTBVbGhMVDBwTFRsZzNSa1ZEV1UxV1JWRTBSVXRGVUZGSU0weFpNMEU9fNUnZGVaU65-l1deO2fW6CZlMEZVcpcmXMqInjV6EFj3'}
&lt;/code>&lt;/pre></description></item><item><title>Docs: Desabilitar Autenticação</title><link>https://platiagro.github.io/docs/getting-started/skip-auth-url/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://platiagro.github.io/docs/getting-started/skip-auth-url/</guid><description>
&lt;h3 id="1-como-desabilitar-a-autenticação-para-certas-urls">1. Como &amp;ldquo;desabilitar&amp;rdquo; a autenticação para certas URLs?&lt;/h3>
&lt;p>Certas URLs não precisam do cookie de autenticação, ou podem ser temporariamente liberadas (para desenvolvimento, por exemplo).&lt;/p>
&lt;p>Para isso deve-se editar o configmap &lt;code>oidc-authservice-parameters&lt;/code> no namespace &lt;code>istio-system&lt;/code>:&lt;/p>
&lt;pre>&lt;code>kubectl -n istio-system edit configmap oidc-authservice-parameters
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://platiagro.github.io/images/oidc-authservice-parameters.png" alt="Screenshot com exibição do comando que edita o configmap, antes de realizar as alterações.">&lt;/p>
&lt;p>Edite o valor &lt;code>SKIP_AUTH_URI&lt;/code> com as URLs que você deseja que ignorem a autenticação. A imagem abaixo mostra um exemplo para as URLs dos serviços projects e datasets. Você pode encontrar mais detalhes sobre esta configuração &lt;a href="https://github.com/yanniszark/oidc-authservice">neste link&lt;/a>.&lt;/p>
&lt;p>&lt;img src="https://platiagro.github.io/images/oidc-authservice-parameters-updated.png" alt="Screenshot com exibição do comando que edita o configmap, após realizar as alterações.">&lt;/p>
&lt;p>Após editar os valores, aplique as mudanças reiniciando o serviço &lt;code>authservice-0&lt;/code> no namespace &lt;code>istio-system&lt;/code>:&lt;/p>
&lt;pre>&lt;code>kubectl -n istio-system delete pod authservice-0
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://platiagro.github.io/images/oidc-authservice-parameters-restart.png" alt="Screenshot com exibição do comando que reinicia o serviço.">&lt;/p>
&lt;p>PRONTO! Você pode verificar que as URLs estão acessíveis mesmo sem o cookie de autenticação.&lt;/p>
&lt;p>&lt;img src="https://platiagro.github.io/images/skip-auth-uri.png" alt="Screenshot com exibição do comando que reinicia o serviço.">&lt;/p></description></item></channel></rss>