<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PlatIAgro – Documentação</title><link>https://platiagro.github.io/docs/</link><description>Recent content in Documentação on PlatIAgro</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://platiagro.github.io/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Ciclo de Desenvolvimento de Projetos de IA</title><link>https://platiagro.github.io/docs/getting-started/workflow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://platiagro.github.io/docs/getting-started/workflow/</guid><description>
&lt;p>As tarefas nativas disponíveis na versão de teste controlado da PlatIAgro foram desenhadas para atender ao ciclo de um projeto de inteligência artificial, mais especificamente para o desenvolvimento de modelos de predição estatística.&lt;/p>
&lt;p>&lt;img src="https://platiagro.github.io/images/ai-flow.png" alt="Ciclo de desenvolvimento de um projeto de inteligência artificial">&lt;/p>
&lt;h3 id="preparação-dos-dados">Preparação dos dados&lt;/h3>
&lt;p>O desenvolvimento de um modelo de IA começa pela busca dos dados de entrada, ou seja, as informações que serão utilizadas como matéria-prima deste processo. Com este objetivo, uma das tarefas nativas da PlatIAgro localiza e importa arquivos de dados do tipo texto. Outras tarefas podem ser desenvolvidas para esse fim, com outras particularidades.&lt;/p>
&lt;h3 id="pré-processamento">Pré-processamento&lt;/h3>
&lt;p>Esta etapa é importante pois tende a melhorar a acurácia dos modelos. Existem diversas formas de realizar a manipulação de dados para serem consumidos por modelos de IA. Para auxiliar na realização desta tarefa de forma automática, a PlatIAgro possui algumas tarefas nativas, como a criação e seleção de novos atributos de forma inteligente e automática.&lt;/p>
&lt;h3 id="modelos-ou-algoritmosbravaliação-validação-e-comparação">Modelos ou algoritmos&lt;br>Avaliação, validação e comparação&lt;/h3>
&lt;p>Para escolher um método específico é necessário entender o tipo do problema, quais informações extras devem ser utilizadas (hiperparâmetros) e qual será o recorte da massa de dados históricos para uma boa acurácia. A PlatIAgro fornece alguns métodos como tarefas nativas: floresta aleatória, regressões e AutoML. O AutoML utiliza um método de otimização que busca pela melhor combinação de métodos e hiperparâmetros de forma automática.&lt;/p>
&lt;h3 id="implantação">Implantação&lt;/h3>
&lt;p>A implantação também é facilitada com a PlatIAgro: utilizando alguns exemplos e instruções didáticas, o desenvolvedor de modelos é direcionado a preparar o código de forma que a implantação seja quase automática, exigindo menos conhecimento técnico.&lt;/p>
&lt;h3 id="predições">Predições&lt;/h3>
&lt;p>Com o modelo implantado, conforme novos dados de entrada chegam à PlatIAgro por uma aplicação, ela os direciona para o fluxo de tarefas associado ao projeto e realiza suas ações. Ao final, os valores estimados são devolvidos à aplicação.&lt;/p>
&lt;h3 id="gerenciamento-e-monitoramento">Gerenciamento e monitoramento&lt;/h3>
&lt;p>Para avaliar em tempo real os modelos de IA já implantados (em utilização), a PlatIAgro fornece uma tarefa nativa de monitoramento.&lt;/p></description></item><item><title>Docs: Visão Geral</title><link>https://platiagro.github.io/docs/components/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://platiagro.github.io/docs/components/overview/</guid><description>
&lt;p>&lt;img src="https://platiagro.github.io/images/architecture-1.png" alt="Visão macro de arquitetura da PlatIAgro.">&lt;/p>
&lt;p>&lt;img src="https://platiagro.github.io/images/architecture-2.png" alt="Visão macro de arquitetura da PlatIAgro.">&lt;/p>
&lt;p>O diagrama a seguir mostra os diversos componentes que compõem a PlatIAgro:&lt;/p>
&lt;p>&lt;img src="https://platiagro.github.io/images/platiagro-components.png" alt="Diagrama de componentes da PlatIAgro.">&lt;/p>
&lt;h3 id="web-uihttpsgithubcomplatiagroweb-ui">&lt;a href="https://github.com/platiagro/web-ui">Web UI&lt;/a>&lt;/h3>
&lt;p>Interface gráfica da PlatIAgro que dá acesso às funcionalidades da plataforma.&lt;/p>
&lt;h3 id="projectshttpsgithubcomplatiagroprojects">&lt;a href="https://github.com/platiagro/projects">Projects&lt;/a>&lt;/h3>
&lt;p>API de gestão de projetos, experimentos e tarefas.&lt;/p>
&lt;h3 id="datasetshttpsgithubcomplatiagrodatasets">&lt;a href="https://github.com/platiagro/datasets">Datasets&lt;/a>&lt;/h3>
&lt;p>API de gerenciamento de conjuntos de dados.&lt;/p>
&lt;h3 id="kubeflow-pipelineshttpsgithubcomkubeflowpipelines">&lt;a href="https://github.com/kubeflow/pipelines">Kubeflow Pipelines&lt;/a>&lt;/h3>
&lt;p>Plataforma para construção e execução de fluxos de &lt;em>machine learning&lt;/em> com base em containers Docker.&lt;/p>
&lt;h3 id="argo-workflowshttpsargo-cdreadthedocsioenstable">&lt;a href="https://argo-cd.readthedocs.io/en/stable/">Argo Workflows&lt;/a>&lt;/h3>
&lt;p>Motor de orquestração de cargas de trabalho no Kubernetes.&lt;/p>
&lt;h3 id="kubeflow-notebook-controllerhttpsgithubcomkubeflowkubeflowtreemastercomponentsnotebook-controller">&lt;a href="https://github.com/kubeflow/kubeflow/tree/master/components/notebook-controller">Kubeflow Notebook Controller&lt;/a>&lt;/h3>
&lt;p>Serviço de gestão de ambientes de Notebook (ex: Jupyter).&lt;/p>
&lt;h3 id="kubeflow-access-managementhttpsgithubcomkubeflowkubeflowtreemastercomponentsaccess-management">&lt;a href="https://github.com/kubeflow/kubeflow/tree/master/components/access-management">Kubeflow Access Management&lt;/a>&lt;/h3>
&lt;p>Serviço de controle de acesso usuário-namespace. Permite uma arquitetura &amp;ldquo;multi-tenant&amp;rdquo; para componentes do Kubeflow.&lt;/p>
&lt;h3 id="kubeflow-profile-controllerhttpsgithubcomkubeflowkubeflowtreemastercomponentsprofile-controller">&lt;a href="https://github.com/kubeflow/kubeflow/tree/master/components/profile-controller">Kubeflow Profile Controller&lt;/a>&lt;/h3>
&lt;p>Serviço controlador de perfis com base em Kubernetes RBAC e Istio AuthorizationPolicy.&lt;/p>
&lt;h3 id="seldon-corehttpsgithubcomseldonioseldon-core">&lt;a href="https://github.com/SeldonIO/seldon-core">Seldon Core&lt;/a>&lt;/h3>
&lt;p>Plataforma para conteinerização de modelos de &lt;em>machine learning&lt;/em> em serviços REST prontos para produção.&lt;/p>
&lt;h3 id="knativehttpsknativedev">&lt;a href="https://knative.dev/">KNative&lt;/a>&lt;/h3>
&lt;p>Plataforma para implantação de cargas &lt;em>serverless&lt;/em>.&lt;/p>
&lt;h3 id="jupyterhttpsjupyterorg">&lt;a href="https://jupyter.org/">Jupyter&lt;/a>&lt;/h3>
&lt;p>Ambiente interativo para desenvolvimento de código e análise de dados.&lt;/p>
&lt;h3 id="mysqlhttpswwwmysqlcom">&lt;a href="https://www.mysql.com/">MySQL&lt;/a>&lt;/h3>
&lt;p>Sistema de gerenciamento de banco de dados relacional.&lt;/p>
&lt;h3 id="miniohttpsminio">&lt;a href="https://min.io/">MinIO&lt;/a>&lt;/h3>
&lt;p>Serviço de armazenamento de arquivos compatível com Amazon S3.&lt;/p>
&lt;h3 id="istiohttpsistioiolatest">&lt;a href="https://istio.io/latest/">Istio&lt;/a>&lt;/h3>
&lt;p>Gerenciador de microsserviços com base em Kubernetes.
Permite funcionalidades como:&lt;/p>
&lt;ul>
&lt;li>comunicação segura entre serviços (com criptografia TLS), com suporte a autenticação&lt;/li>
&lt;li>balanceamento de carga automático, para tráfego HTTP, WebSocket e TCP&lt;/li>
&lt;li>controle de tráfego e rotas, limites de acesso, &lt;em>retry&lt;/em>, &lt;em>failovers&lt;/em> e &lt;em>fault injection&lt;/em>&lt;/li>
&lt;li>captura de métricas e logs dentro do cluster, no ingresso e saída&lt;/li>
&lt;/ul>
&lt;h3 id="dex-oidchttpsdexidpio">&lt;a href="https://dexidp.io/">Dex OIDC&lt;/a>&lt;/h3>
&lt;p>Serviço de autenticação com base no protocolo OpenID Connect.&lt;/p></description></item><item><title>Docs: Ambiente para Desenvolvimento</title><link>https://platiagro.github.io/docs/developers/dev-env/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://platiagro.github.io/docs/developers/dev-env/</guid><description>
&lt;h3 id="1-expor-o-minio-para-o-ambiente-de-desenvolvimento">1. Expor o MinIO para o ambiente de desenvolvimento&lt;/h3>
&lt;p>No ambiente com a PlatIAgro, execute o seguinte comando para expor o MinIO:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl patch svc nginx --patch &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;{&amp;#34;spec&amp;#34;: { &amp;#34;type&amp;#34;: &amp;#34;NodePort&amp;#34;, &amp;#34;ports&amp;#34;: [ { &amp;#34;nodePort&amp;#34;: 32001, &amp;#34;port&amp;#34;: 9000, &amp;#34;protocol&amp;#34;: &amp;#34;TCP&amp;#34;, &amp;#34;targetPort&amp;#34;: 9000 } ] } }&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>No seu ambiente de desenvolvimento, defina as seguintes variáveis de ambiente:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">MINIO_ENDPOINT&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;hostname-ou-endereco-ip&amp;gt;:32001
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">MINIO_ACCESS_KEY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;access-key&amp;gt;
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">MINIO_SECRET_KEY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;secret-key&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Obs: o access key e secret key podem ser obtidos com os seguintes comandos:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl -n platiagro get secrets minio-secrets --template&lt;span style="color:#ce5c00;font-weight:bold">={{&lt;/span>.data.MINIO_ACCESS_KEY&lt;span style="color:#ce5c00;font-weight:bold">}}&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> base64 -d
kubectl -n platiagro get secrets minio-secrets --template&lt;span style="color:#ce5c00;font-weight:bold">={{&lt;/span>.data.MINIO_SECRET_KEY&lt;span style="color:#ce5c00;font-weight:bold">}}&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> base64 -d
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-expor-o-mysql-para-o-ambiente-de-desenvolvimento">2. Expor o MySQL para o ambiente de desenvolvimento&lt;/h3>
&lt;p>No ambiente com a PlatIAgro, execute o seguinte comando para expor o MySQL:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#000">MYSQL&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl -n platiagro get pod -l &lt;span style="color:#000">app&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>mysql -o &lt;span style="color:#000">jsonpath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">={&lt;/span>.items..metadata.name&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
kubectl -n platiagro port-forward &lt;span style="color:#000">$MYSQL&lt;/span> --address 0.0.0.0 31001:3306
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Você pode combinar com &lt;code>nohup kubectl -n platiagro port-forward $MYSQL --address 0.0.0.0 31001:3306 &amp;amp;&lt;/code> para deixar o processo rodando em segundo plano.&lt;/p>
&lt;p>No seu ambiente de desenvolvimento, defina as seguintes variáveis de ambiente:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">MYSQL_DB_HOST&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;hostname-ou-endereco-ip&amp;gt;:31001
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">MYSQL_DB_USER&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;user&amp;gt;
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">MYSQL_DB_PASSWORD&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;password&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Obs: a senha podem ser visualizada com o seguinte comando:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl -n platiagro get secrets mysql-secrets --template&lt;span style="color:#ce5c00;font-weight:bold">={{&lt;/span>.data.MYSQL_ROOT_PASSWORD&lt;span style="color:#ce5c00;font-weight:bold">}}&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> base64 -d
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>ATENÇÃO 1: Expor com NodePort não funciona para o MySQL da PlatIAgro!&lt;/strong>&lt;/p>
&lt;p>&lt;strong>ATENÇÃO 2: O processo &lt;code>kubectl -n platiagro port-forward ...&lt;/code> geralmente finaliza após alguns minutos/horas. É necessário rodar o comando novamente para que o MySQL fique acessível.&lt;/strong>&lt;/p>
&lt;h3 id="3-autenticar-se-no-kubeflow-pipelines">3. Autenticar-se no Kubeflow Pipelines&lt;/h3>
&lt;p>O Kubeflow pipelines precisa do header &lt;code>kubeflow-userid: anonymous@kubeflow.org&lt;/code> para executar operações. Este header é incluído automaticamente para serviços dentro do cluster. Para incluir o header em requisições externas (ex: num ambiente de desenvolvimento, localhost) crie o seguinte &lt;a href="https://istio.io/latest/docs/reference/config/networking/envoy-filter/">envoy-filter&lt;/a> no cluster:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl apply -f - &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;span style="color:#4e9a06">apiVersion: networking.istio.io/v1alpha3
&lt;/span>&lt;span style="color:#4e9a06">kind: EnvoyFilter
&lt;/span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;span style="color:#4e9a06"> name: add-kubeflow-userid-filter
&lt;/span>&lt;span style="color:#4e9a06"> namespace: istio-system
&lt;/span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;span style="color:#4e9a06"> workloadSelector:
&lt;/span>&lt;span style="color:#4e9a06"> labels:
&lt;/span>&lt;span style="color:#4e9a06"> istio: ingressgateway
&lt;/span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;span style="color:#4e9a06"> configPatches:
&lt;/span>&lt;span style="color:#4e9a06"> - applyTo: VIRTUAL_HOST
&lt;/span>&lt;span style="color:#4e9a06"> match:
&lt;/span>&lt;span style="color:#4e9a06"> context: SIDECAR_OUTBOUND
&lt;/span>&lt;span style="color:#4e9a06"> routeConfiguration:
&lt;/span>&lt;span style="color:#4e9a06"> vhost:
&lt;/span>&lt;span style="color:#4e9a06"> name: ml-pipeline.kubeflow.svc.cluster.local:8888
&lt;/span>&lt;span style="color:#4e9a06"> route:
&lt;/span>&lt;span style="color:#4e9a06"> name: default
&lt;/span>&lt;span style="color:#4e9a06"> patch:
&lt;/span>&lt;span style="color:#4e9a06"> operation: MERGE
&lt;/span>&lt;span style="color:#4e9a06"> value:
&lt;/span>&lt;span style="color:#4e9a06"> request_headers_to_add:
&lt;/span>&lt;span style="color:#4e9a06"> - append: true
&lt;/span>&lt;span style="color:#4e9a06"> header:
&lt;/span>&lt;span style="color:#4e9a06"> key: kubeflow-userid
&lt;/span>&lt;span style="color:#4e9a06"> value: anonymous@kubeflow.org
&lt;/span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="4-desabilitar-autenticação-validação-de-cookie-em-ambiente-com-login">4. Desabilitar Autenticação (validação de cookie) em ambiente com Login&lt;/h3>
&lt;p>&lt;strong>Por que desabilitar a autenticação?&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>para que devs do Frontend acessem o backend da aplicação sem o cookie de login.&lt;/li>
&lt;li>para que devs do Backend acessem Kubeflow Pipelines a partir de fora do cluster&lt;/li>
&lt;li>para facilitar testes/integração de fluxos implantados&lt;/li>
&lt;/ul>
&lt;p>Siga as instruções &lt;a href="https://platiagro.github.io/docs/getting-started/skip-auth-url/">deste link&lt;/a> para desabilitar o login.&lt;/p>
&lt;h3 id="5-aumentar-os-limites-de-eviction-do-kubernetes-para-ambientes-com-pouco-espaço-em-disco">5. Aumentar os limites de &lt;em>eviction&lt;/em> do Kubernetes para ambientes com pouco espaço em disco&lt;/h3>
&lt;p>No ambiente com a PlatIAgro, execute o seguinte comando:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;KUBELET_EXTRA_ARGS=--eviction-hard=nodefs.available&amp;lt;1%,nodefs.inodesFree&amp;lt;1%,imagefs.available&amp;lt;1% --image-gc-high-threshold=99&amp;#39;&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> sudo tee /etc/default/kubelet
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="6-trocar-o-https-por-http-no-gateway-de-entrada">6. Trocar o HTTPS por HTTP no gateway de entrada&lt;/h3>
&lt;p>Por padrão a PlatIAgro é instalada com um certificado (HTTPS) auto-assinado e acessos HTTP redirecionam para HTTPS.&lt;/p>
&lt;p>Para desabilitar o HTTPS, execute os seguintes passos:&lt;/p>
&lt;p>Editar o gateway &lt;code>kubeflow-gateway&lt;/code> no namespace &lt;code>kubeflow&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl -n kubeflow edit gateway kubeflow-gateway
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ao final do arquivo, você verá o seguinte trecho:&lt;/p>
&lt;p>&lt;img src="https://platiagro.github.io/images/kubeflow-gateway.png" alt="Screenshot com exibição do comando que edita o gateway, antes de realizar as alterações.">&lt;/p>
&lt;p>Edite o &lt;code>spec&lt;/code> para ficar da seguinte forma:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">...&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">selector&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">istio&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>ingressgateway&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">servers&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">hosts&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#39;*&amp;#39;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">port&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>http&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">number&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">80&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">protocol&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>HTTP&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Após salvar as alterações, a plataforma estará acessível &lt;strong>apenas por http.&lt;/strong> Acessos com HTTPS retornarão erro.&lt;/p>
&lt;p>&lt;img src="https://platiagro.github.io/images/platiagro-http.png" alt="Screenshot com exibição de acessos à plataforma com HTTP e HTTPS, após realizar as alterações.">&lt;/p>
&lt;h3 id="7-habilitar-corshttpsdevelopermozillaorgen-usdocswebhttpcors-nos-backends-da-platiagro">7. Habilitar &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS">CORS&lt;/a> nos backends da PlatIAgro&lt;/h3>
&lt;p>Para que um desenvolvedor Frontend use o backend da aplicação, é necessário habilitar o &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS">CORS&lt;/a>.&lt;/p>
&lt;p>Edite os deployments &lt;code>projects&lt;/code> e &lt;code>datasets&lt;/code> no namespace &lt;code>platiagro&lt;/code> e inclua a variável de ambiente &lt;code>ENABLE_CORS=1&lt;/code> em ambos:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl -n platiagro &lt;span style="color:#204a87">set&lt;/span> env deployment/projects &lt;span style="color:#000">ENABLE_CORS&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
kubectl -n platiagro &lt;span style="color:#204a87">set&lt;/span> env deployment/datasets &lt;span style="color:#000">ENABLE_CORS&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Instalação da PlatIAgro</title><link>https://platiagro.github.io/docs/getting-started/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://platiagro.github.io/docs/getting-started/install/</guid><description>
&lt;h3 id="instalação-em-um-cluster-kubernetes">Instalação em um cluster Kubernetes&lt;/h3>
&lt;p>Certifique-se de ter os seguintes pré-requisitos antes de instalar a PlatIAgro:&lt;/p>
&lt;ul>
&lt;li>&lt;code>Kubernetes&lt;/code> (testado com a versão &lt;code>1.18&lt;/code>) com um &lt;a href="https://kubernetes.io/docs/concepts/storage/storage-classes/">StorageClass&lt;/a>&lt;/li>
&lt;li>&lt;code>kustomize&lt;/code> (testado com a versão &lt;code>3.2.0&lt;/code>) (&lt;a href="https://github.com/kubernetes-sigs/kustomize/releases/tag/v3.2.0">download link&lt;/a>)
&lt;ul>
&lt;li>PlatIAgro é construída usando o &lt;a href="https://www.kubeflow.org">Kubeflow&lt;/a>, e o Kubeflow 1.3.0 não é compatível com a versão mais recente do kustomize 4.x.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>kubectl&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Há 4 modos de instalação:&lt;/p>
&lt;pre>&lt;code>platiagro sem autenticação e pronta para CPU.
platiagro-gpu sem autenticação e pronta para GPU.
platiagro-auth com autenticação e pronta para CPU.
platiagro-gpu-auth com autenticação e pronta para GPU.
&lt;/code>&lt;/pre>&lt;p>Ajuste a variável &lt;code>INSTALL_DIR=platiagro&lt;/code>, e então rode os seguintes comandos:&lt;/p>
&lt;pre>&lt;code>export INSTALL_DIR=platiagro
git clone --single-branch --branch v0.2.0-kubeflow-v1.3-branch https://github.com/platiagro/manifests.git
cd manifests
while ! kustomize build $INSTALL_DIR | kubectl apply -f -; do echo &amp;quot;Retrying to apply resources&amp;quot;; sleep 10; done
&lt;/code>&lt;/pre>&lt;p>Então visite https://[LOAD-BALANCER-HOST]/&lt;/p>
&lt;h3 id="instalação-no-google-kubernetes-engine-gke">Instalação no Google Kubernetes Engine (GKE)&lt;/h3>
&lt;p>Visite &lt;a href="https://platiagro-gcp.herokuapp.com/">https://platiagro-gcp.herokuapp.com/&lt;/a> e siga as instruções.&lt;/p></description></item><item><title>Docs: Kubeflow</title><link>https://platiagro.github.io/docs/components/kubeflow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://platiagro.github.io/docs/components/kubeflow/</guid><description>
&lt;p>Kubeflow é uma platforma para auxiliar o desenvolvimento e implantação de aplicações de machine learning (ML).&lt;/p>
&lt;h3 id="veja-mais-detalhes-na-documentação-do-kubeflowhttpswwwkubefloworgdocsstartedkubeflow-overview">Veja mais detalhes &lt;a href="https://www.kubeflow.org/docs/started/kubeflow-overview/">na documentação do Kubeflow.&lt;/a>&lt;/h3>
&lt;h3 id="componentes-do-kubeflow">Componentes do Kubeflow&lt;/h3>
&lt;p>&lt;img src="https://platiagro.github.io/images/kubeflow-overview-platform-diagram.png" alt="Diagrama de componentes do Kubeflow.">&lt;/p>
&lt;h3 id="kubeflow-central-dashboard">Kubeflow Central Dashboard&lt;/h3>
&lt;p>&lt;img src="https://platiagro.github.io/images/kubeflow-central-ui.png" alt="Interface do Kubeflow.">&lt;/p></description></item><item><title>Docs: Interface Web</title><link>https://platiagro.github.io/docs/getting-started/first-access/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://platiagro.github.io/docs/getting-started/first-access/</guid><description>
&lt;p>A seguir estão algumas capturas de tela de interfaces da PlatIAgro.&lt;/p>
&lt;h3 id="lista-de-projetos">Lista de projetos&lt;/h3>
&lt;p>&lt;img src="https://platiagro.github.io/images/list-projects.png" alt="Lista de projetos.">&lt;/p>
&lt;h3 id="fluxo-de-experimentos">Fluxo de experimentos&lt;/h3>
&lt;p>&lt;img src="https://platiagro.github.io/images/experiments.png" alt="Fluxo de experimentos.">&lt;/p>
&lt;h3 id="comparação-de-resultados">Comparação de resultados&lt;/h3>
&lt;p>&lt;img src="https://platiagro.github.io/images/comparison.png" alt="Comparação de resultados.">&lt;/p>
&lt;h3 id="fluxos-implantados">Fluxos implantados&lt;/h3>
&lt;p>&lt;img src="https://platiagro.github.io/images/deployments.png" alt="Fluxo implantados.">&lt;/p>
&lt;h3 id="lista-de-tarefas">Lista de tarefas&lt;/h3>
&lt;p>&lt;img src="https://platiagro.github.io/images/list-tasks.png" alt="Lista de tarefas.">&lt;/p>
&lt;h3 id="jupyterlab">JupyterLab&lt;/h3>
&lt;p>&lt;img src="https://platiagro.github.io/images/jupyterlab.png" alt="Código fonte da tarefa no JupyterLab.">&lt;/p></description></item><item><title>Docs: Jupyter Notebooks</title><link>https://platiagro.github.io/docs/components/jupyter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://platiagro.github.io/docs/components/jupyter/</guid><description>
&lt;p>JupyterLab é uma interface web para trabalhar com Jupyter Notebooks.&lt;br>
Com o Jupyter é possível rodar código-fonte de forma interativa (Markdown, Python, R, LaTeX, etc.).&lt;/p>
&lt;h3 id="veja-mais-detalhes-na-documentação-do-jupyterlabhttpsjupyterlabreadthedocsioenstablegetting_startedoverviewhtml">Veja mais detalhes &lt;a href="https://jupyterlab.readthedocs.io/en/stable/getting_started/overview.html">na documentação do JupyterLab.&lt;/a>&lt;/h3>
&lt;h3 id="crie-e-edite-tarefas-no-jupyterlab">Crie e edite tarefas no Jupyterlab&lt;/h3>
&lt;p>&lt;img src="https://platiagro.github.io/images/jupyterlab.png" alt="Tela inicial no Jupyterlab.">&lt;/p>
&lt;h3 id="declare-parâmetros-de-tarefas">Declare parâmetros de tarefas&lt;/h3>
&lt;p>&lt;img src="https://platiagro.github.io/images/jupyterlab-parameters.png" alt="Modal de declaração de parâmetros de tarefas no Jupyterlab.">&lt;/p>
&lt;h3 id="faça-upload-de-datasets-para-usar-em-tarefas">Faça upload de datasets para usar em tarefas&lt;/h3>
&lt;p>&lt;img src="https://platiagro.github.io/images/jupyterlab-datasets.png" alt="Modal de upload de datasets no Jupyterlab.">&lt;/p></description></item><item><title>Docs: Criação de senha</title><link>https://platiagro.github.io/docs/getting-started/password-creation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://platiagro.github.io/docs/getting-started/password-creation/</guid><description>
&lt;h3 id="criação-de-login-e-senha-na-platiagro">Criação de login e senha na platiagro&lt;/h3>
&lt;p>É altamente &lt;strong>NÃO recomendado&lt;/strong> a utilização da senha predefinida do usuário padrão da platiagro em ambientes que precisam de segurança. Dito isto, segue abaixo as recomendações de criação de senha:&lt;/p>
&lt;ol>
&lt;li>considere o usuário padrão com o login &lt;code>platiagro&lt;/code>, basta escolher uma senha para esse usuário e em seguida transformá-la em uma hash utilizando a lib &lt;code>bcrypt&lt;/code> do python, segue os passos para realizar isto:&lt;/li>
&lt;/ol>
&lt;p>Comando de instalação de bibliotecas necessárias(bcrypt e passlib):&lt;/p>
&lt;pre>&lt;code>pip3 install passlib[bcrypt]
pip3 install bcrypt
obs: Para instalações de bibliotecas python 3 é necessário ter o gerenciador de pacotes pip3 instalado
&lt;/code>&lt;/pre>&lt;p>Script de geração da hash:&lt;/p>
&lt;pre>&lt;code>python3 -c 'from passlib.hash import bcrypt; import getpass; print(bcrypt.using(rounds=12, ident=&amp;quot;2y&amp;quot;).hash(getpass.getpass()))'
obs: Será solicitada a senha que deseja ser transformada em hash. O comando acima foi executado em terminais linux com interpretador de python(&amp;gt;=3.6).
&lt;/code>&lt;/pre>&lt;p>segue um exemplo de utilização do bcrypt para geração de hash: &lt;img src="https://platiagro.github.io/images/hash_generation.png" alt="Hash generation file">&lt;/p>
&lt;ol start="2">
&lt;li>A hash gerada no passo anterior precisa ser inserida em &lt;code>dex/base/config-map.yaml&lt;/code>. É possível usar um comando do kubectl para editar o configmap, segue o comando:&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>kubectl -n auth edit configmap dex
&lt;/code>&lt;/pre>&lt;p>segue um exemplo de trecho do configmap: &lt;img src="https://platiagro.github.io/images/configmap.png" alt="Config map file">&lt;/p>
&lt;ol start="3">
&lt;li>Uma vez com o configmap aberto, basta inserir o email/hash no seguinte trecho do arquivo:&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>...
staticPasswords:
- email: platiagro
hash: &amp;lt;enter the generated hash here&amp;gt;
&lt;/code>&lt;/pre>&lt;p>Exemplo de mais de um email/hash configurado: &lt;img src="https://platiagro.github.io/images/config-email-hash.png" alt="Config email hash">&lt;/p>
&lt;ol start="4">
&lt;li>Reinicie o serviço para que as novas senhas comecem a ser utilizadas, utilizando o seguinte comando:&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>kubectl -n auth delete pod -l app=dex
&lt;/code>&lt;/pre>&lt;h3 id="links-úteis">Links úteis&lt;/h3>
&lt;ul>
&lt;li>Documentação do dex: &lt;a href="https://dexidp.io/docs/using-dex/">https://dexidp.io/docs/using-dex/&lt;/a>&lt;/li>
&lt;li>Instruções sobre instalações de pacotes python: &lt;a href="https://packaging.python.org/tutorials/installing-packages/">https://packaging.python.org/tutorials/installing-packages/&lt;/a>&lt;/li>
&lt;li>Repositório do bcrypt: &lt;a href="https://github.com/pyca/bcrypt/">https://github.com/pyca/bcrypt/&lt;/a>&lt;/li>
&lt;li>Tutorial sobre encriptação de senhas com bcrypt: &lt;a href="https://medium.com/py-bcrypt/encriptando-senhas-em-python-com-bcrypt-25e46b5c8166">https://medium.com/py-bcrypt/encriptando-senhas-em-python-com-bcrypt-25e46b5c8166&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docs: Seldon Core</title><link>https://platiagro.github.io/docs/components/seldon/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://platiagro.github.io/docs/components/seldon/</guid><description>
&lt;p>Seldon Core, é um &lt;em>framework open-source&lt;/em> que facilita a implantação de modelos de no Kubernetes.&lt;br>
Com o Seldon é possível organizar um fluxo sequencial de modelos, além de gerenciar sua escalabilidade e atualizações.&lt;/p>
&lt;h3 id="veja-mais-detalhes-na-documentação-do-seldon-corehttpsdocsseldonioprojectsseldon-coreenlatestworkflowoverviewhtml">Veja mais detalhes &lt;a href="https://docs.seldon.io/projects/seldon-core/en/latest/workflow/overview.html">na documentação do Seldon Core.&lt;/a>&lt;/h3>
&lt;h3 id="prepare-tarefas-para-implantação">Prepare Tarefas para Implantação&lt;/h3>
&lt;p>&lt;img src="https://platiagro.github.io/images/seldon-language-wrapper.png" alt="Diagrama da preparação de modelos.">&lt;/p></description></item><item><title>Docs: Autenticação PlatIAgro</title><link>https://platiagro.github.io/docs/getting-started/authentication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://platiagro.github.io/docs/getting-started/authentication/</guid><description>
&lt;p>O método para obter o token authservice_session para enviar solicitações de predição autenticadas ao PlatIAgro.&lt;/p>
&lt;h3 id="usando-python">Usando Python&lt;/h3>
&lt;p>Criar um arquivo, por exemplo, &lt;code>authpla.py&lt;/code>, e colocar o conteúdo abaixo:&lt;/p>
&lt;pre>&lt;code>import requests
import os
requests.packages.urllib3.disable_warnings(
requests.packages.urllib3.exceptions.InsecureRequestWarning)
USERNAME = &amp;quot;platiagro&amp;quot;
PASSWORD = &amp;quot;platiagro1234&amp;quot;
HOST = os.popen(&amp;quot;kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.clusterIP}'&amp;quot;).read()
NAMESPACE=&amp;quot;istio-system&amp;quot;
session = requests.Session()
response = session.get(f&amp;quot;https://{HOST}&amp;quot;, verify=False)
headers = {
&amp;quot;Content-Type&amp;quot;: &amp;quot;application/x-www-form-urlencoded&amp;quot;,
}
data = {&amp;quot;login&amp;quot;: USERNAME, &amp;quot;password&amp;quot;: PASSWORD}
session.post(response.url, headers=headers, data=data)
print(session.cookies.get_dict())
session_cookie = session.cookies.get_dict()[&amp;quot;authservice_session&amp;quot;]
print(session_cookie)
&lt;/code>&lt;/pre>&lt;p>Executar o script &lt;code>python3 authpla.py&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>Retorno esperado:&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>{'authservice_session':'MTYzMDUyNjMzM3xOd3dBTkZaVVVsazNWRFEwUlRSWFRGUkZOak5FU1RWV1MxVTBVbGhMVDBwTFRsZzNSa1ZEV1UxV1JWRTBSVXRGVUZGSU0weFpNMEU9fNUnZGVaU65-l1deO2fW6CZlMEZVcpcmXMqInjV6EFj3'}
&lt;/code>&lt;/pre></description></item><item><title>Docs: Desabilitar Autenticação</title><link>https://platiagro.github.io/docs/getting-started/skip-auth-url/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://platiagro.github.io/docs/getting-started/skip-auth-url/</guid><description>
&lt;h3 id="1-como-desabilitar-a-autenticação-para-certas-urls">1. Como &amp;ldquo;desabilitar&amp;rdquo; a autenticação para certas URLs?&lt;/h3>
&lt;p>Certas URLs não precisam do cookie de autenticação, ou podem ser temporariamente liberadas (para desenvolvimento, por exemplo).&lt;/p>
&lt;p>Para isso deve-se editar o configmap &lt;code>oidc-authservice-parameters&lt;/code> no namespace &lt;code>istio-system&lt;/code>:&lt;/p>
&lt;pre>&lt;code>kubectl -n istio-system edit configmap oidc-authservice-parameters
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://platiagro.github.io/images/oidc-authservice-parameters.png" alt="Screenshot com exibição do comando que edita o configmap, antes de realizar as alterações.">&lt;/p>
&lt;p>Edite o valor &lt;code>SKIP_AUTH_URI&lt;/code> com as URLs que você deseja que ignorem a autenticação. A imagem abaixo mostra um exemplo para as URLs dos serviços projects e datasets. Você pode encontrar mais detalhes sobre esta configuração &lt;a href="https://github.com/yanniszark/oidc-authservice">neste link&lt;/a>.&lt;/p>
&lt;p>&lt;img src="https://platiagro.github.io/images/oidc-authservice-parameters-updated.png" alt="Screenshot com exibição do comando que edita o configmap, após realizar as alterações.">&lt;/p>
&lt;p>Após editar os valores, aplique as mudanças reiniciando o serviço &lt;code>authservice-0&lt;/code> no namespace &lt;code>istio-system&lt;/code>:&lt;/p>
&lt;pre>&lt;code>kubectl -n istio-system delete pod authservice-0
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://platiagro.github.io/images/oidc-authservice-parameters-restart.png" alt="Screenshot com exibição do comando que reinicia o serviço.">&lt;/p>
&lt;p>PRONTO! Você pode verificar que as URLs estão acessíveis mesmo sem o cookie de autenticação.&lt;/p>
&lt;p>&lt;img src="https://platiagro.github.io/images/skip-auth-uri.png" alt="Screenshot com exibição do comando que reinicia o serviço.">&lt;/p></description></item></channel></rss>